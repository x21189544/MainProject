<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Web3 IT Asset Management Reports</title>
    <script
      type="text/javascript"
      src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7-rc.0/web3.min.js"
    ></script>
  </head>

  <body style="background-color: lightskyblue">
    <!-- include header partials -->
    <%- include('partials/header') %>

    <h1 class="text-center">
      Welcome to the Web3 IT Asset Management Reports Page
    </h1>

    <!-- Display Asset Details-->
    <div class="container">
      <br />
      <!-- Get Owner Details -->
      <div id="getOwnerArea" class="form-group">
        <label for="serialGetOwner"
          >Enter Asset Serial Number below to get Asset Details</label
        >
        <input
          type="text"
          class="form-control"
          id="serialGetOwner"
          name="serialGetOwner"
          placeholder="Enter Asset Serial Number"
          required
        />
      </div>

      <button
        onclick="getOwner()"
        class="btn btn-primary"
        data-bs-toggle="modal"
        data-bs-target="#assetDetailsModal"
      >
        Get Asset Details
      </button>
    </div>

<<<<<<< HEAD
    <!-- Display Maintenance Details-->
    <div class="container">
      <br />
      <!-- Get Serial Number -->
      <div id="getMaintenanceArea" class="form-group">
        <label for="serialGetOwner"
          >Enter Asset Serial Number to view maintenance performed</label
        >
        <input
          type="text"
          class="form-control"
          id="serialGetMaintenance"
          name="serialGetMainenance"
          placeholder="Enter Asset Serial Number"
          required
        />
      </div>

      <button
        onclick="getMaintenance()"
        class="btn btn-primary"
        data-bs-toggle="modal"
        data-bs-target="#assetMaintenanceModal"
      >
        Get Asset Maintenance
      </button>
    </div>

=======
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
    <!-- Modal Asset Details -->
    <div
      class="modal fade"
      id="assetDetailsModal"
      tabindex="-1"
      aria-labelledby="assetDetailsModal"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="assetDetailsModal">Asset Details</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <!-- Modal Table -->
          <div class="modal-body">
            <p id="ownerArea">Owner will display here</p>
            <div id="detailsArea" style="display: none">
              <table
                class="table table-striped table-hover color: background-color: $indigo-900"
              >
                <tbody>
                  <tr>
                    <td>Asset Type</td>
                    <td id="getAssetType"></td>
                  </tr>
                  <tr>
                    <td>Make</td>
                    <td id="getMake"></td>
                  </tr>
                  <tr>
                    <td>Model</td>
                    <td id="getModel"></td>
                  </tr>
                  <tr>
                    <td>RAM</td>
                    <td id="getRam"></td>
                  </tr>
                  <tr>
                    <td>Hard Drive Type</td>
                    <td id="getHarddriveType"></td>
                  </tr>
                  <tr>
                    <td>Hard Drive Size</td>
                    <td id="getHardDriveSize"></td>
                  </tr>
                  <tr>
                    <td>Location</td>
                    <td id="getLocation"></td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>

<<<<<<< HEAD
    <!-- Modal Asset Maintenance -->
    <div
      class="modal fade"
      id="assetMaintenanceModal"
      tabindex="-1"
      aria-labelledby="assetMaintenanceModal"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="assetMaintenanceModal">
              Asset Maintenace Performed
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <!-- Modal Table -->
          <div class="modal-body">
            <p id="maintenanceArea">Maintenance will display here</p>
            <div id="maintenanceArea" style="display: none">
              <table
                class="table table-striped table-hover color: background-color: $indigo-900"
              >
                <tbody>
                  <tr>
                    <td>Maintenance Performed/td></td>
                    <td id="getAssetMaintenance"></td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>

=======
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
    <!-- include header partials -->
    <%- include('partials/footer') %>

    <script>
      // the below script code is convention in web3 in forming the communication with Web
      let account;
      const connectMetamask = async () => {
        if (window.ethereum !== "undefined") {
          const accounts = await ethereum.request({
            method: "eth_requestAccounts",
          });
          account = accounts[0];
          document.getElementById(
            "userArea"
          ).innerHTML = `User Account: ${account}`;
        }

        //contract ABI
        const ABI = [
          {
            anonymous: false,
            inputs: [
              {
                indexed: true,
                internalType: "address",
<<<<<<< HEAD
                name: "owner",
=======
                name: "registrant",
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
                type: "address",
              },
              {
                indexed: false,
                internalType: "string",
                name: "serialNumber",
                type: "string",
              },
            ],
            name: "AssetRegistered",
            type: "event",
          },
          {
            anonymous: false,
            inputs: [
              {
                indexed: false,
                internalType: "string",
                name: "serialNumber",
                type: "string",
              },
<<<<<<< HEAD
              {
                indexed: false,
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
              },
            ],
            name: "AssetTransferred",
            type: "event",
          },
          {
            anonymous: false,
            inputs: [
              {
                indexed: false,
                internalType: "string",
                name: "serialNumber",
                type: "string",
              },
=======
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
            ],
            name: "AssetUpdated",
            type: "event",
          },
          {
<<<<<<< HEAD
            anonymous: false,
            inputs: [
              {
                indexed: false,
                internalType: "string",
                name: "serialNumber",
                type: "string",
              },
              {
                indexed: false,
                internalType: "string",
                name: "maintenanceInfo",
                type: "string",
              },
            ],
            name: "MaintenancePerformed",
            type: "event",
          },
          {
=======
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
            inputs: [
              {
                internalType: "string",
                name: "_serialNumber",
                type: "string",
              },
<<<<<<< HEAD
              {
                internalType: "string",
                name: "_maintenanceInfo",
                type: "string",
              },
            ],
            name: "performMaintenance",
            outputs: [],
            stateMutability: "nonpayable",
=======
            ],
            name: "getAssetBySerialNumber",
            outputs: [
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "address",
                name: "",
                type: "address",
              },
            ],
            stateMutability: "view",
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
            type: "function",
          },
          {
            inputs: [
              {
                internalType: "string",
                name: "_serialNumber",
                type: "string",
              },
              {
                internalType: "string",
                name: "_assetType",
                type: "string",
              },
              {
                internalType: "string",
                name: "_make",
                type: "string",
              },
              {
                internalType: "string",
                name: "_model",
                type: "string",
              },
              {
                internalType: "string",
                name: "_RAM",
                type: "string",
              },
              {
                internalType: "string",
                name: "_hardDriveType",
                type: "string",
              },
              {
                internalType: "string",
                name: "_hardDriveSize",
                type: "string",
              },
              {
                internalType: "string",
                name: "_location",
                type: "string",
              },
            ],
            name: "registerAsset",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              {
                internalType: "string",
                name: "_serialNumber",
                type: "string",
              },
              {
<<<<<<< HEAD
                internalType: "address",
                name: "_newOwner",
                type: "address",
              },
            ],
            name: "transferAsset",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            inputs: [
              {
                internalType: "string",
                name: "_serialNumber",
                type: "string",
              },
              {
=======
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
                internalType: "string",
                name: "_assetType",
                type: "string",
              },
              {
                internalType: "string",
                name: "_make",
                type: "string",
              },
              {
                internalType: "string",
                name: "_model",
                type: "string",
              },
              {
                internalType: "string",
                name: "_RAM",
                type: "string",
              },
              {
                internalType: "string",
                name: "_hardDriveType",
                type: "string",
              },
              {
                internalType: "string",
                name: "_hardDriveSize",
                type: "string",
              },
              {
                internalType: "string",
                name: "_location",
                type: "string",
              },
            ],
            name: "updateAsset",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function",
          },
<<<<<<< HEAD
          {
            inputs: [
              {
                internalType: "string",
                name: "_serialNumber",
                type: "string",
              },
            ],
            name: "getAssetDetails",
            outputs: [
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "string",
                name: "",
                type: "string",
              },
              {
                internalType: "address",
                name: "",
                type: "address",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
          {
            inputs: [
              {
                internalType: "string",
                name: "_serialNumber",
                type: "string",
              },
            ],
            name: "getMaintenance",
            outputs: [
              {
                internalType: "string",
                name: "",
                type: "string",
              },
            ],
            stateMutability: "view",
            type: "function",
          },
        ];

        const Address = "0x9727b6b3268e92ebbcab3a162429b0efb0276a82"; //conrtact address
=======
        ];

        const Address = "0xf35629444a6901100dfd7e2d7488a8610b78ad20"; //conrtact address
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
        window.web3 = await new Web3(window.ethereum);
        window.contract = await new window.web3.eth.Contract(ABI, Address);
        document.getElementById("contractArea").innerHTML =
          "Connected to Contract"; //calling the elementID and replacing
      };

      //Get owner and details function
      const getOwner = async () => {
        const serial = document.getElementById("serialGetOwner").value;
        console.log(serial);
        try {
          const result = await window.contract.methods
<<<<<<< HEAD
            .getAssetDetails(serial)
=======
            .getAssetBySerialNumber(serial)
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
            .call();
          console.log(result);
          document.getElementById("detailsArea").style.display = "block";
          document.getElementById(
            "ownerArea"
          ).innerHTML = `Owner: ${result[8]}`;
          document.getElementById("getAssetType").innerHTML = `${result[1]}`;
          document.getElementById("getMake").innerHTML = `${result[2]}`;
          document.getElementById("getModel").innerHTML = `${result[3]}`;
          document.getElementById("getRam").innerHTML = `${result[4]}`;
          document.getElementById(
            "getHarddriveType"
          ).innerHTML = `${result[5]}`;
          document.getElementById(
            "getHardDriveSize"
          ).innerHTML = `${result[6]}`;
          document.getElementById("getLocation").innerHTML = `${result[7]}`;
        } catch (err) {
          document.getElementById(
            "ownerArea"
          ).innerHTML = `Asset not registered`;
          document.getElementById("detailsArea").style.display = "none";
        }
      };
<<<<<<< HEAD

      //Get asset maintenance performed
      const getMaintenance = async () => {
        const serial = document.getElementById("serialGetMaintenance").value;
        console.log(serial);
        try {
          const result = await window.contract.methods
            .getMaintenance(serial)
            .call();
          console.log(result);
          document.getElementById("maintenanceArea").innerHTML = `${result}`;
        } catch (err) {
          console.log(err);
          document.getElementById(
            "maintenanceArea"
          ).innerHTML = `Asset not found`;
        }
      };
=======
>>>>>>> 4b36b59f468288feb535916ee603e9aae10e2db3
    </script>
  </body>
</html>
